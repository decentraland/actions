name: AI Pull Request Review

on:
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh analysis (ignore cache)'
        required: false
        default: 'false'
        type: boolean
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created, edited]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    environment: ai-review
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'pull_request' ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/ai-review'))
    
    steps:
      - name: AI Review Status
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "ü§ñ AI Review triggered! Running analysis..."
            echo "üìã This will analyze your PR and post a detailed review comment."
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ü§ñ AI Review manually triggered! Running analysis..."
          elif [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "ü§ñ AI Review triggered by comment! Running analysis..."
          fi
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests>=2.31.0 anthropic>=0.7.0

      - name: Download AI Reviewer Script
        run: |
          curl -o ai_reviewer.py https://raw.githubusercontent.com/decentraland/actions/main/scripts/ai_pr_reviewer/index.py

      - name: Run AI PR Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          python ai_reviewer.py \
            --pr-number "$PR_NUMBER" \
            --repo-owner "$REPO_OWNER" \
            --repo-name "$REPO_NAME"

      - name: Comment on PR
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f "review_comment.md" ]; then
            python -c "
import requests
import os
import json

# Read comment
with open('review_comment.md', 'r') as f:
    comment = f.read()

# Post comment
url = f'https://api.github.com/repos/{os.getenv(\"REPO_OWNER\")}/{os.getenv(\"REPO_NAME\")}/issues/{os.getenv(\"PR_NUMBER\")}/comments'
headers = {
    'Authorization': f'token {os.getenv(\"GITHUB_TOKEN\")}',
    'Accept': 'application/vnd.github.v3+json'
}
data = {'body': comment}

response = requests.post(url, headers=headers, json=data)
if response.status_code == 201:
    print('‚úÖ Comment posted successfully')
else:
    print(f'‚ùå Failed to post comment: {response.status_code}')
"
          fi
